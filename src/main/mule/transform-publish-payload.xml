<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
	<jms:config name="JMS_Config" doc:name="JMS Config" doc:id="8c0dd362-f721-4ae2-b37a-0cf9721e58ff" >
		<jms:active-mq-connection username="admin" password="admin" >
			<jms:factory-configuration brokerUrl="tcp://localhost:61616" />
		</jms:active-mq-connection>
	</jms:config>
	<flow name="finalFlow" doc:id="82d6e1ea-ae09-4e3a-a476-2fd6dee106e8" >
		<http:listener doc:name="Listener" doc:id="c79cdee3-803c-434a-976b-fa39508570ba" config-ref="HTTP_Listener_config" path="/${publish.path}"/>
		<try doc:name="Try" doc:id="0a007bda-2733-4a21-b699-406b31b13c87" >
			<flow-ref doc:name="comments" doc:id="70ac36e6-7b82-45f9-9c17-752d50afbc14" name="store-comments-payload" />
			<flow-ref doc:name="posts" doc:id="6c8c70ac-5bf8-434a-8f30-6f1729d6e147" name="store-posts-payload" />
			<error-handler>
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="242b4267-71d5-4612-83f7-1b323101e375" >
					<ee:transform doc:name="Error Description" doc:id="c236dce8-b6cc-4ab5-a126-31d5d982e25b" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"Error_Description":error.description,
	"Time Occured": now()
	
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<db:insert doc:name="Insert Errors to Table" doc:id="7e657e27-3a66-4da4-8fc6-60afb534ab85" config-ref="Database_Config" >
						<db:sql ><![CDATA[insert into error values(:Error_Description,:time);]]></db:sql>
						<db:input-parameters ><![CDATA[#[{
Error_Description:payload.Error_Description,
time:payload."Time Occured"
}]]]></db:input-parameters>
					</db:insert>
				</on-error-continue>
			</error-handler>
		</try>
		<try doc:name="Try" doc:id="578877a2-88ee-4b8c-8025-7852b9cc9815" >
			<flow-ref doc:name="users" doc:id="fcdffb16-0b66-4b53-b3d9-380760f5e1ac" name="store-users-payload" />
			<ee:transform doc:name="Transform Message" doc:id="5ec2bf6d-8c65-45ef-9082-d53029fa4cd6">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json

---
 payload map(key,val)->{
	"USER": 
	{"id":key.id,
	"name":key.name,
	"username":key.username,
	"email":key.email,
	"street":key.street,
	"suite":key.suite,
	"city":key.city,
	"zipcode":key.zipcode,
	"geoLat":key.geoLat,
	"geoLng":key.geoLng,
	"phone":key.phone,
	"website":key.website,
	"companyName":key.companyName,
	"companyCatchPhrase":key.companyCatchPhrase,
	"companyBs":key.companyBs
	
},
    "POSTS":{
(vars.postsVar filter($.userId==key.id) map (k,v)->
		{
			"id":k.id,
			"title":k.title,
			"body":k.body,
			"userId":k.userId,
			"comments":{
				(vars.comVar filter($.postId==k.id) map (k2,v2)->
		{
			"postId":k2.postId,
			"id":k2.id,
			"email":k2.email,
			"body":k2.body,
			"name":k2.name
		}	
)
				
			}
			
		}
		
		)
		
		
		}	
		
		
}
    	
    	
    ]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			<error-handler >
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="98be38fc-7491-4884-be69-f7ea6022b0fb" >
					<ee:transform doc:name="Error Description" doc:id="7ee66ba4-f52b-4f13-9a79-ba1f81cacdbe" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"Error_Description":error.description,
	"Time Occured": now()
	
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<db:insert doc:name="Insert Errors to Table" doc:id="e7e96ab3-83b8-4d56-af9f-7d13303e6dbe" config-ref="Database_Config" >
						<db:sql ><![CDATA[insert into error values(:Error_Description,:time);]]></db:sql>
						<db:input-parameters ><![CDATA[#[{
Error_Description:payload.Error_Description,
time:payload."Time Occured"
}]]]></db:input-parameters>
					</db:insert>
				</on-error-propagate>
			</error-handler>
		</try>
		<try doc:name="Try" doc:id="f1361474-fab8-4c53-913f-577be9ffaa52" >
			<foreach doc:name="For Each" doc:id="cf5cc4e4-f0db-46ce-b1bc-c774846c7865">
			<jms:publish doc:name="Publish" doc:id="30a2f685-adfc-4235-a007-f25186957841" config-ref="JMS_Config" destination="${active.queue}" />
				<set-payload value="Message Published" doc:name="Set Payload" doc:id="cd3b560e-604c-4e92-b380-ec05383823bb" />
		</foreach>
			<error-handler >
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="d92e2de6-ad56-400c-a731-019a8d68f5be" >
					<ee:transform doc:name="Error Description" doc:id="3fefa3fa-eb62-4e39-9b5c-f02d1d9ea73d" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"Error_Description":error.description,
	"Time Occured": now()
	
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<db:insert doc:name="Insert Errors to Table" doc:id="a21ea1dd-56c9-40f6-ac01-d1179f4d1c18" config-ref="Database_Config" >
						<db:sql ><![CDATA[insert into error values(:Error_Description,:time);]]></db:sql>
						<db:input-parameters ><![CDATA[#[{
Error_Description:payload.Error_Description,
time:payload."Time Occured"
}]]]></db:input-parameters>
					</db:insert>
				</on-error-continue>
			</error-handler>
		</try>
		<error-handler>
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="cf33b890-4d69-4195-9514-54e7aeae57ff" >
				<ee:transform doc:name="Error Description" doc:id="a2b02a1d-450c-442c-bfc3-f0b54ed15c7f" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"Error_Description":error.description,
	"Time Occured": now()
	
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<db:insert doc:name="Insert Errors to Table" doc:id="667558b3-7c9b-4c0d-bc25-4815cb99490d" config-ref="Database_Config" >
					<db:sql ><![CDATA[insert into error values(:Error_Description,:time);]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
Error_Description:payload.Error_Description,
time:payload."Time Occured"
}]]]></db:input-parameters>
				</db:insert>
			</on-error-propagate>
		</error-handler>
	</flow>
</mule>
