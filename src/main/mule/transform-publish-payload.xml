<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
	<jms:config name="JMS_Config" doc:name="JMS Config" doc:id="8c0dd362-f721-4ae2-b37a-0cf9721e58ff" >
		<jms:active-mq-connection username="admin" password="admin" >
			<jms:factory-configuration brokerUrl="tcp://localhost:61616" />
		</jms:active-mq-connection>
	</jms:config>
	<flow name="finalFlow" doc:id="82d6e1ea-ae09-4e3a-a476-2fd6dee106e8" >
		<http:listener doc:name="Listener" doc:id="c79cdee3-803c-434a-976b-fa39508570ba" config-ref="HTTP_Listener_config" path="/${publish.path}"/>
		<try doc:name="Try" doc:id="0a007bda-2733-4a21-b699-406b31b13c87" >
			<flow-ref doc:name="comments" doc:id="70ac36e6-7b82-45f9-9c17-752d50afbc14" name="store-comments-payload" />
			<error-handler>
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="242b4267-71d5-4612-83f7-1b323101e375" type="DB:BAD_SQL_SYNTAX, DB:QUERY_EXECUTION, DB:RETRY_EXHAUSTED, EXPRESSION, STREAM_MAXIMUM_SIZE_EXCEEDED">
					<ee:transform doc:name="Error Description" doc:id="c236dce8-b6cc-4ab5-a126-31d5d982e25b" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"Error_Description":error.description,
	"Time Occured": now()
	
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<db:insert doc:name="Insert Errors to Table" doc:id="7e657e27-3a66-4da4-8fc6-60afb534ab85" config-ref="Database_Config" >
						<db:sql ><![CDATA[insert into error values(:Error_Description,:time);]]></db:sql>
						<db:input-parameters ><![CDATA[#[{
Error_Description:payload.Error_Description,
time:payload."Time Occured"
}]]]></db:input-parameters>
					</db:insert>
				</on-error-continue>
			</error-handler>
		</try>
		<try doc:name="Try" doc:id="f3d6d5ff-8939-4089-b250-1c50112bbea3" >
			<flow-ref doc:name="posts" doc:id="6c8c70ac-5bf8-434a-8f30-6f1729d6e147" name="store-posts-payload" />
			<error-handler >
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="34afc707-d1bb-44b8-8e60-aa49f4024c2a" type="DB:BAD_SQL_SYNTAX, DB:QUERY_EXECUTION, DB:RETRY_EXHAUSTED, JMS:CONNECTIVITY, JMS:DESTINATION_NOT_FOUND, JMS:ILLEGAL_BODY, JMS:PUBLISHING, JMS:RETRY_EXHAUSTED, JMS:SECURITY, EXPRESSION, STREAM_MAXIMUM_SIZE_EXCEEDED">
					<ee:transform doc:name="Error Description" doc:id="ebd8ca8b-b731-4b8e-b504-073d0228a163" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"Error_Description":error.description,
	"Time Occured": now()
	
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<db:insert doc:name="Insert Errors to Table" doc:id="8f2d388c-c23a-4a7b-8fc0-ffac4847849a" config-ref="Database_Config" >
						<db:sql ><![CDATA[insert into error values(:Error_Description,:time);]]></db:sql>
						<db:input-parameters ><![CDATA[#[{
Error_Description:payload.Error_Description,
time:payload."Time Occured"
}]]]></db:input-parameters>
					</db:insert>
				</on-error-continue>
			</error-handler>
		</try>
		<try doc:name="Try" doc:id="578877a2-88ee-4b8c-8025-7852b9cc9815" >
			<flow-ref doc:name="users" doc:id="fcdffb16-0b66-4b53-b3d9-380760f5e1ac" name="store-users-payload" />
			<ee:transform doc:name="Transform Message" doc:id="5ec2bf6d-8c65-45ef-9082-d53029fa4cd6">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json

---
 payload default [] map(key,val)->{
	"USER": 
	{"id":key.id,
	"name":key.name,
	"username":key.username,
	"email":key.email,
	"street":key.street,
	"suite":key.suite,
	"city":key.city,
	"zipcode":key.zipcode,
	"geoLat":key.geoLat,
	"geoLng":key.geoLng,
	"phone":key.phone,
	"website":key.website,
	"companyName":key.companyName,
	"companyCatchPhrase":key.companyCatchPhrase,
	"companyBs":key.companyBs
	
},
    "POSTS":
(vars.postsVar filter($.userId==key.id) map (k,v)->
		{
			"id":k.id,
			"title":k.title,
			"body":k.body,
			"userId":k.userId,
			"comments":
				(vars.comVar filter($.postId==k.id) map (k2,v2)->
		{
			"postId":k2.postId,
			"id":k2.id,
			"email":k2.email,
			"body":k2.body,
			"name":k2.name
		}	
)
				
			
			
		}
		
		)
		
		
			
		
		
}
    	
    	
    ]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			<error-handler >
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="a7dc80c1-e77b-486c-80b0-73709789f230" type="DB:BAD_SQL_SYNTAX, DB:QUERY_EXECUTION, DB:RETRY_EXHAUSTED, EXPRESSION, STREAM_MAXIMUM_SIZE_EXCEEDED">
					<ee:transform doc:name="Error Description" doc:id="82bbc866-992a-476b-942c-8b8168afd747" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"Error_Description":error.description,
	"Time Occured": now()
	
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<db:insert doc:name="Insert Errors to Table" doc:id="119e3658-84b4-4651-978c-f508480933f1" config-ref="Database_Config" >
						<db:sql ><![CDATA[insert into error values(:Error_Description,:time);]]></db:sql>
						<db:input-parameters ><![CDATA[#[{
Error_Description:payload.Error_Description,
time:payload."Time Occured"
}]]]></db:input-parameters>
					</db:insert>
				</on-error-propagate>
			</error-handler>
		</try>
		<foreach doc:name="For Each" doc:id="cf5cc4e4-f0db-46ce-b1bc-c774846c7865">
				<try doc:name="Try" doc:id="252477a5-9840-4923-85f7-ec4591b8e238">
					<jms:publish doc:name="Publish" doc:id="30a2f685-adfc-4235-a007-f25186957841" config-ref="JMS_Config" destination="${main.queue}" />
				<error-handler>
					<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="02f22156-2354-427c-b1a1-fbe64013a4f9" type="JMS:CONNECTIVITY">
						<ee:transform doc:name="Transform Message" doc:id="a7ddd703-0271-4d25-bd66-f5e7096f8d55" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"Error_Description":error.description,
	"Time Occured": now()
	
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<db:insert doc:name="Insert Errors to Table" doc:id="4535dad3-cbee-4f3a-a64c-52697c305e3f" config-ref="Database_Config" >
							<db:sql ><![CDATA[insert into error values(:Error_Description,:time);]]></db:sql>
							<db:input-parameters ><![CDATA[#[{
Error_Description:payload.Error_Description,
time:payload."Time Occured"
}]]]></db:input-parameters>
						</db:insert>
					</on-error-propagate>
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="928b1bf8-e0d0-47fd-8da5-a8b9e3c63df8" type="DB:BAD_SQL_SYNTAX, DB:QUERY_EXECUTION, DB:RETRY_EXHAUSTED, JMS:DESTINATION_NOT_FOUND, JMS:ILLEGAL_BODY, JMS:PUBLISHING, JMS:RETRY_EXHAUSTED, JMS:SECURITY, EXPRESSION, STREAM_MAXIMUM_SIZE_EXCEEDED">
						<ee:transform doc:name="Transform Message" doc:id="4b1723f5-1b16-4480-9937-1f59916141e5" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"Error_Description":error.description,
	"Time Occured": now()
	
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<db:insert doc:name="Insert Errors to Table" doc:id="de1158cb-0af8-48eb-a5bc-56f50458fed3" config-ref="Database_Config" >
							<db:sql ><![CDATA[insert into error values(:Error_Description,:time);]]></db:sql>
							<db:input-parameters ><![CDATA[#[{
Error_Description:payload.Error_Description,
time:payload."Time Occured"
}]]]></db:input-parameters>
						</db:insert>
					</on-error-continue>
				</error-handler>
				</try>
		</foreach>
		<set-payload value="Message Published" doc:name="Set Payload" doc:id="cd3b560e-604c-4e92-b380-ec05383823bb" />
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="1d97fbed-f33a-4c17-9408-e610ef3d7e83" type="DB:CONNECTIVITY" >
				<ee:transform doc:name="ErrorDescription" doc:id="bfab1d3e-5083-42da-bf9e-b3294ea870d4" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"Error_Description":error.description,
	"Time Occured": now()
	
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<jms:publish doc:name="Publish Error" doc:id="733b2138-6573-41d2-99da-7c9a00d9e879" config-ref="JMS_Config" destination="${queue.Errors}" />
			</on-error-propagate>
		</error-handler>
	</flow>
</mule>
